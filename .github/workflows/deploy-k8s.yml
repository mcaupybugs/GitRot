name: Deploy to Kubernetes

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
          - production

env:
  NAMESPACE: gitrot

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Configure kubectl
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Verify connection
        run: |
          kubectl cluster-info
          kubectl get nodes

      - name: Install cert-manager (if not exists)
        run: |
          # Check if cert-manager namespace exists
          if ! kubectl get namespace cert-manager &> /dev/null; then
            echo "Installing cert-manager..."
            kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.0/cert-manager.yaml
            echo "Waiting for cert-manager to be ready..."
            kubectl wait --for=condition=available --timeout=300s deployment/cert-manager -n cert-manager
            kubectl wait --for=condition=available --timeout=300s deployment/cert-manager-cainjector -n cert-manager
            kubectl wait --for=condition=available --timeout=300s deployment/cert-manager-webhook -n cert-manager
            echo "cert-manager installed successfully!"
          else
            echo "cert-manager already installed"
          fi

      - name: Deploy to Kubernetes
        run: |
          cd charts/gitrot

          # Apply all manifests
          # Deploy
          kubectl apply -f namespace.yaml
          kubectl apply -f . -n gitrot

      - name: Wait for deployment
        run: |
          kubectl wait --for=condition=available --timeout=300s deployment/gitrot-backend -n ${{ env.NAMESPACE }}
          kubectl wait --for=condition=available --timeout=300s deployment/gitrot-frontend -n ${{ env.NAMESPACE }}

      - name: Check SSL certificate status
        run: |
          echo "Checking SSL certificate status..."
          kubectl get certificate -n ${{ env.NAMESPACE }} || echo "No certificates found yet"
          # Wait a bit for certificate to be processed
          kubectl wait --for=condition=ready certificate/gitrot-tls --timeout=300s -n ${{ env.NAMESPACE }} || echo "Certificate still being processed..."

      - name: Get deployment status
        run: |
          echo "## ðŸš€ Deployment Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Services" >> $GITHUB_STEP_SUMMARY
          kubectl get services -n ${{ env.NAMESPACE }} >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Pods" >> $GITHUB_STEP_SUMMARY
          kubectl get pods -n ${{ env.NAMESPACE }} >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### SSL Certificates" >> $GITHUB_STEP_SUMMARY
          kubectl get certificate -n ${{ env.NAMESPACE }} >> $GITHUB_STEP_SUMMARY || echo "No certificates found" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Ingress" >> $GITHUB_STEP_SUMMARY
          kubectl get ingress -n ${{ env.NAMESPACE }} >> $GITHUB_STEP_SUMMARY
